<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>ELPA - Tag - Jen-Chieh's Blog</title><link>http://example.com/blog/tags/elpa/</link><description>ELPA - Tag - Jen-Chieh's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>jcs090218@gmail.com (Jen-Chieh Shen)</managingEditor><webMaster>jcs090218@gmail.com (Jen-Chieh Shen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 15 Sep 2023 21:00:00 +0005</lastBuildDate><atom:link href="http://example.com/blog/tags/elpa/" rel="self" type="application/rss+xml"/><item><title>How to build your own ELPA with Eask?</title><link>http://example.com/blog/build-elpa/</link><pubDate>Fri, 15 Sep 2023 21:00:00 +0005</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/build-elpa/</guid><description><![CDATA[ELPA is stand for Emacs Lisp Package Archive. It&rsquo;s used for Emacs users to download packages from, and it&rsquo;s also the place where Emacs Lisp developers will host their packages. Here is a list of famous ELPA, see their site for more information!
 GNU Elpa (official) NonGNU Elpa (official) MELPA  ❓ Why? So why do we want to host our own ELPA? Isn&rsquo;t those ELPAs enough?
Yes, in general you don&rsquo;t need to host ELPA yourself since most packages you need will be avaliable in one of those ELPA (packages can co-exist between ELPA).]]></description></item><item><title>Fastest ELPA</title><link>http://example.com/blog/fastest-elpa/</link><pubDate>Mon, 10 Apr 2023 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/fastest-elpa/</guid><description>What&amp;rsquo;s the fastest ELPA? Let&amp;rsquo;s define it first! The ELPA runs the fastest? No, that doesn&amp;rsquo;t make any sense. The ELPA serves you the fastest? Maybe.
The definition for fastest ELPA in this article means it builds your packages the fastest! You might wonder why and how! Let me explain it to you!
Normal ELPA, like MELPA, builds packages from the recipes directory, so it takes O(n) to do so. The more packages one ELPA holds, take longer the time to get packages to update to the server.</description></item></channel></rss>