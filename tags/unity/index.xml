<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Unity - Tag - Jen-Chieh's Blog</title><link>http://example.com/blog/tags/unity/</link><description>Unity - Tag - Jen-Chieh's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>jcs090218@gmail.com (Jen-Chieh Shen)</managingEditor><webMaster>jcs090218@gmail.com (Jen-Chieh Shen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 25 Sep 2021 21:00:00 +0000</lastBuildDate><atom:link href="http://example.com/blog/tags/unity/" rel="self" type="application/rss+xml"/><item><title>Automate Personal License Activation in Unity CI</title><link>http://example.com/blog/automate-personal-license-activation-in-unity-ci/</link><pubDate>Sat, 25 Sep 2021 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/automate-personal-license-activation-in-unity-ci/</guid><description><![CDATA[<p>Following up the thread, <a href="https://forum.unity.com/threads/my-disappointing-experience-using-unity-in-a-ci-pipeline.737678/" target="_blank" rel="noopener noreffer">My disappointing experience using Unity in a CI pipeline</a>
is also the biggest obstacle for me as well. Personal license (free version) of
Unity will expire in a period of time depends on your region. The licensing system
from Unity is partially contradict to the CI/CD concept since it will force
the user to update their secret <code>UNITY_LICENSE</code> on their GitHub Actions. (Notice
this does not apply to Plus/Pro users because they use a different licensing system!)
ðŸ˜–</p>]]></description></item><item><title>In a delima</title><link>http://example.com/blog/%E9%81%87%E5%88%B0%E5%9B%B0%E9%9B%A3/</link><pubDate>Wed, 06 May 2020 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/%E9%81%87%E5%88%B0%E5%9B%B0%E9%9B%A3/</guid><description>WIP</description></item><item><title>JCSUnity - Save System</title><link>http://example.com/blog/save-system/</link><pubDate>Tue, 03 Jul 2018 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/save-system/</guid><description>This is a introduction of how JCSUnity does for the game data save/load system.
There are main three ways that you could do saving and loading in Unity Engine with C#.
JCS_BinGameData - In binary format JCS_XMLGameData - In XML format JCS_JSONGameData - In JSON format</description></item><item><title>JCSUnity Overview</title><link>http://example.com/blog/overview/</link><pubDate>Mon, 02 Jul 2018 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/overview/</guid><description>JCSUnity Repo: https://github.com/jcs090218/JCSUnity
Acknowledge I have developed this tool for 3 years. Starting from the third year of my college years. Compare to other framework I had developed, this tool have much more completeness. I have been using Unity Engine for 2 years while I decide to develop this framework. I have made cetain of games in this 2 years and I reckon I gained enough experiences to develop a framework for Unity Engine.</description></item></channel></rss>