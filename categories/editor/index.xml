<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Editor - Category - Jen-Chieh's Blog</title><link>http://example.com/blog/categories/editor/</link><description>Editor - Category - Jen-Chieh's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>jcs090218@gmail.com (Jen-Chieh Shen)</managingEditor><webMaster>jcs090218@gmail.com (Jen-Chieh Shen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 23 Aug 2023 21:00:00 +0000</lastBuildDate><atom:link href="http://example.com/blog/categories/editor/" rel="self" type="application/rss+xml"/><item><title>Shader Language Server (LS)</title><link>http://example.com/blog/shader-ls/</link><pubDate>Wed, 23 Aug 2023 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/shader-ls/</guid><description>Repo Link: https://github.com/shader-ls/shader-language-server
April 30th, 2023. I have created my first language server that is actually useful to someone. I tried a language server a while back, but it was just an example server, so it’s not very useful, and it’s only for educational purposes.
The target language I chose to write is the ShaderLab language. ShaderLab is used in Unity Engine, so you can write custom shaders to stylize your game.</description></item><item><title>Long Journey with Emacs</title><link>http://example.com/blog/long-journey-with-emacs/</link><pubDate>Sat, 08 Jul 2023 21:00:00 +0005</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/long-journey-with-emacs/</guid><description><![CDATA[⚠️ The intention of this post is to remind myself why Emacs isn&rsquo;t worth my time anymore.
I&rsquo;ve been using Emacs since 2015. I have developed more than 150 elisp packages, and maintained over 200 packages (including my packages). It&rsquo;s been a long journey staying in the Emacs community, I think it&rsquo;s a good for me to slow myself down and step back a little and think what I&rsquo;ve accomplished through out these years.]]></description></item><item><title>Fastest ELPA</title><link>http://example.com/blog/fastest-elpa/</link><pubDate>Mon, 10 Apr 2023 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/fastest-elpa/</guid><description>What&amp;rsquo;s the fastest ELPA? Let&amp;rsquo;s define it first! The ELPA runs the fastest? No, that doesn&amp;rsquo;t make any sense. The ELPA serves you the fastest? Maybe.
The definition for fastest ELPA in this article means it builds your packages the fastest! You might wonder why and how! Let me explain it to you!
Normal ELPA, like MELPA, builds packages from the recipes directory, so it takes O(n) to do so. The more packages one ELPA holds, take longer the time to get packages to update to the server.</description></item><item><title>Emacs Eask 101 - Build tool</title><link>http://example.com/blog/emacs-eask-101/</link><pubDate>Mon, 10 Apr 2023 21:00:00 +0005</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/emacs-eask-101/</guid><description><![CDATA[I&rsquo;ve developed more than 50 elisp packages, and maintain 100 or more of them. Developing an elisp package isn&rsquo;t easy for a beginner, especially for those who want to publish their package to an ELPA. e.g., GNU Elpa, NonGNU Elpa, MELPA, etc.
That&rsquo;s why I use Eask to help me develop elisp packages. Therefore, in this article, I&rsquo;m going to teach people how to use this tool to help you build your own elisp packages!]]></description></item><item><title>Emacs Eask - Alternative to Emacs Cask</title><link>http://example.com/blog/emacs-eask/</link><pubDate>Sun, 29 May 2022 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/emacs-eask/</guid><description>🔰 Introduction The name Eask came from Emacs Cask ; if you already know what Cask is and what it does, please skip this and forward to the next section.
(NOTE: Cask and Eask are interchangeable in this section)
Eask is the dependency management tool for Emacs Lisp. It&amp;rsquo;s like npm to Node.js; but it isn&amp;rsquo;t exactly the same since Eask has fewer tools than npm, plus their ecosystems are slightly different.</description></item><item><title>Emacs vs Vim</title><link>http://example.com/blog/emacs-vs-vim/</link><pubDate>Sun, 10 Dec 2017 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/emacs-vs-vim/</guid><description>Precisely that I am neither an Emacs nor Vim expert. I am just an amateur that knows about the two editors with just amount of knowledge. If you check out two of my Emacs and Vim repo, this could be the worst experience of all time. I hold onto an idea that the editors are just a tool. Unless there are issues that hamper or paster my workflow, I will avoid changing the configuration to my editor.</description></item><item><title>Best Editor Ever</title><link>http://example.com/blog/best-editor-ever/</link><pubDate>Sun, 12 Nov 2017 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/best-editor-ever/</guid><description>First the foremost, this article is all subjective opinions by me, and there are all kind of text editor for any kind of programmer. I think some programmer have some kind of religion, so I am not going to tell anyone to use any particular text editor. I believed text editor is just tool to help programmer make a software and get their job done.
At my previous post ' Framework I have been working&amp;hellip; (Part 2) ' I mentioned I watched a few episodes of ' Handmade Hero &amp;rsquo;s series.</description></item></channel></rss>