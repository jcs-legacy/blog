<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jen-Chieh's Blog</title><link>http://example.com/blog/</link><description>Hugo theme - LoveIt</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>jcs090218@gmail.com (Jen-Chieh Shen)</managingEditor><webMaster>jcs090218@gmail.com (Jen-Chieh Shen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 29 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://example.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Game Jam - Aug 2022</title><link>http://example.com/blog/game-jam-aug-2022/</link><pubDate>Mon, 29 Aug 2022 00:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/game-jam-aug-2022/</guid><description>WIP</description></item><item><title>Emacs Eask - Alternative to Emacs Cask</title><link>http://example.com/blog/emacs-eask/</link><pubDate>Sun, 29 May 2022 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/emacs-eask/</guid><description>üî∞ Introduction The name Eask came from Emacs Cask ; if you already know what Cask is and what it does, please skip this and forward to the next section.
(NOTE: Cask and Eask are interchangeable in this section)
Eask is the dependency management tool for Emacs Lisp. It&amp;rsquo;s like npm to Node.js; but it isn&amp;rsquo;t exactly the same since Eask has fewer tools than npm, plus their ecosystems are slightly different.</description></item><item><title>First static site generator</title><link>http://example.com/blog/first-static-site-generator/</link><pubDate>Sun, 26 Sep 2021 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/first-static-site-generator/</guid><description>I&amp;rsquo;m recently hooked by the static site generator, hence I have decided to create one for myself. Why not? The huge reason is that I could host the site using the GitHub&amp;rsquo;s static site hosting services, but the one I have previously created in 2018 API-Reference-Template. is server base, which is not generator base.
The static site generator isn&amp;rsquo;t hard to create, the most valuable technology is the frontend and UI/UX.</description></item><item><title>Automate Personal License Activation in Unity CI</title><link>http://example.com/blog/automate-personal-license-activation-in-unity-ci/</link><pubDate>Sat, 25 Sep 2021 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/automate-personal-license-activation-in-unity-ci/</guid><description><![CDATA[<p>Following up the thread, <a href="https://forum.unity.com/threads/my-disappointing-experience-using-unity-in-a-ci-pipeline.737678/" target="_blank" rel="noopener noreffer">My disappointing experience using Unity in a CI pipeline</a>
is also the biggest obstacle for me as well. Personal license (free version) of
Unity will expire in a period of time depends on your region. The licensing system
from Unity is partially contradict to the CI/CD concept since it will force
the user to update their secret <code>UNITY_LICENSE</code> on their GitHub Actions. (Notice
this does not apply to Plus/Pro users because they use a different licensing system!)
üòñ</p>]]></description></item><item><title>Why I left USYD</title><link>http://example.com/blog/why-i-left-usyd/</link><pubDate>Wed, 15 Sep 2021 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/why-i-left-usyd/</guid><description>WIP
WIP
üí¨ Past experience WIP
üò® Puzzled WIP
‚ùó Awakening WIP
üí¨ Future WIP</description></item><item><title>In a dilemma</title><link>http://example.com/blog/%E9%81%87%E5%88%B0%E5%9B%B0%E9%9B%A3/</link><pubDate>Wed, 06 May 2020 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/%E9%81%87%E5%88%B0%E5%9B%B0%E9%9B%A3/</guid><description>This is a record, a message from me to one of my ex-firned.
The talked was, 2020-05-06
While you are in a dilemma, we humans are totally normal to be afraid of it. This may be a process; afraid makes us strong and a much more experienced people. Humans suppose to grow like that! So let it be! Once you are afraid of something, don&amp;rsquo;t give up on trying it; think about the issue, think as hard as you can, and try to resolve it!</description></item><item><title>What I am about to do</title><link>http://example.com/blog/what-i-am-about-to-do/</link><pubDate>Mon, 16 Dec 2019 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/what-i-am-about-to-do/</guid><description>Productivity is topic that often is ignored by a lot programmer. I have seen a bunch of documents out there talking about algorithm and data structure, so I would like to post a topic about productivity for an advanced programmer or for the programmer who wants to be a better programmer. So what exactly mean productivity in software development field? If you have seen my previous blog post ' Framework I have been working&amp;hellip; (Part 1) ' and ' Framework I have been working&amp;hellip; (Part 2) &amp;lsquo;, then you might already know what I am going to write about for the rest of this article.</description></item><item><title>Art, Design, Programming</title><link>http://example.com/blog/art-design-programming/</link><pubDate>Tue, 12 Nov 2019 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/art-design-programming/</guid><description><![CDATA[When get started to the game development, people will somehow face some sort of situation that they will need to determine what they are going to master to do in the development. The game development are mainly split into three careers, which are &lsquo;Art&rsquo;, &lsquo;Design&rsquo;, and &lsquo;Programming&rsquo;. These three jobs are very different to one the other. The best method to figure it out what you want to do is to try all them all out one at a time.]]></description></item><item><title>Programming In Game</title><link>http://example.com/blog/programming-in-game/</link><pubDate>Tue, 12 Nov 2019 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/programming-in-game/</guid><description>WIP</description></item><item><title>API Reference Template</title><link>http://example.com/blog/api-reference-template/</link><pubDate>Mon, 12 Nov 2018 21:00:00 +0000</pubDate><author>Jen-Chieh Shen</author><guid>http://example.com/blog/api-reference-template/</guid><description>Demo: http://www.jcs-profile.com:3000/Manual/index.html
GitHub Repo: https://github.com/jcs090218/API-Reference-Template
Many of my works are about making API. I always have their trouble making API documents for myself and for people to read what each API does. To resolve this issue, I spent a few hours to design a small website that I could drop the HTML file in the target folder and it will show the file on the website. The following list is the list of technologies I used in the project.</description></item></channel></rss>