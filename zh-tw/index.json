[{"categories":["Server"],"content":"我一直以來的的 web hosting, 一直是使用aws. 但最近總覺得價錢太貴, 而且很多資金的使用 並不是這麼貼心. 總是莫名其妙多了一些費用. 當然, 這些並不是說aws有問題. 不過它們這方 面的機制, 我本身並不是很喜歡. 所以我決定在這個月, 換一個web hosting的公司. 更換的 理由如下: AWS收費機制不討人喜歡 價格對於小型用戶太過昂貴, 而且不是這麼需要 UI介面有夠醜, UX很糟糕 它們大量的制定他們aws服務的專有名詞, 這部分技能是無法轉移的 (EC2? Route 53? 等等) 接著, 進入細節. ","date":"2022-09-10","objectID":"/blog/zh-tw/first-server-migration/:0:0","tags":["Server","migration"],"title":"第一次遷移服務器","uri":"/blog/zh-tw/first-server-migration/"},{"categories":["Server"],"content":"📋 遷移網域名 這次遷移的目標是 jcs-profile.com 這個網域. 查一下 who.is, 註冊商是 amazon.com. 我之前是使用 AWS 裡面的網域 註冊服務 Route 53 來註冊這個網域. 不過 我想把它移置到 Namecheap. 這家並不是最便宜的, 不過他的優點大概是老牌, 介面也算乾淨好整理. 不會有些雜七雜八的東西. 不過我自己 也沒有用過很多家, 所以我也不班門弄斧了. 等我有足夠的經驗再來補充. 選擇網域註冊商, 我是參考了下面這支影片. 我原本是想選 Google Domains 的, 不過當我選擇國家的時候, 竟然沒有支援台灣!? (還在拓展中) 所以後來索性選擇了 Namecheap. 不過依然是個很棒著選擇! 😁 Craylor Made 講解得非常棒! 給個讚! 👍 不過這次的網域名的遷移, 因為更改了註冊商, 所以花了五天的時間更改註冊商. 我那時候是 禮拜四申請轉移網域名, 禮拜一才轉移完成. 😅 ","date":"2022-09-10","objectID":"/blog/zh-tw/first-server-migration/:0:1","tags":["Server","migration"],"title":"第一次遷移服務器","uri":"/blog/zh-tw/first-server-migration/"},{"categories":["Server"],"content":"📂 資料轉移 這部分就非常簡單了, 我一樣使用 FileZilla 來透過 FTP 連線把我舊的 (在aws) 資料全部拉下來做備份. 由於我沒有使用什麼特別的 服務, 像是 Node, PHP, MySQL, 所以我也不用過多的考慮. 先直接拉下來就好. 不過這部分的遷移也是挺簡單的, 只要記得, 在確定把所有東西遷移到新的服務器之前, 千萬不要把舊的關閉! 這邊感覺蠻可惜的是, 我並沒有使用 Docker 部屬的習慣. 有機會的話, 我是蠻想有用 Docker 遷移服務器的機會! 🙂 ","date":"2022-09-10","objectID":"/blog/zh-tw/first-server-migration/:0:2","tags":["Server","migration"],"title":"第一次遷移服務器","uri":"/blog/zh-tw/first-server-migration/"},{"categories":["Server"],"content":"🩹 重新啟動 新的 web hosting 我選擇 DigitalOcean. 選擇 DO 的原因如下, 便宜 (相對於aws) 透明資金流向 好看且清新的介面 文件很多, 社群友善 唯一的缺點大概是, 目前提供的服務器位置都在歐美地區. 相比於其他家算是比較少的. 資料轉移完成後, 第一件最重要的是把位址轉移到新的服務器IP. 因為我沒有使用過 Namecheap 所以我是參考了下面的影片解說, 非常值觀好了解! 我原本舊的網域服務器位址 (aws的NAMESERVERS) ns-1375.awsdns-43.org ns-1685.awsdns-18.co.uk ns-804.awsdns-36.net ns-93.awsdns-11.com 新的要改成, (DO的`NAMESERVERS``) ns1.digitalocean.com. ns2.digitalocean.com. ns3.digitalocean.com. 接著到DO 的 DNS Records 那邊新增 HOSTNAME 就完成了! Type Hostname Value TTL(seconds) A @ IP位址 3600 (預設的) A www IP位址 3600 (預設的) 結束! 萬歲!~ 🥳🎉🎊 ","date":"2022-09-10","objectID":"/blog/zh-tw/first-server-migration/:0:3","tags":["Server","migration"],"title":"第一次遷移服務器","uri":"/blog/zh-tw/first-server-migration/"},{"categories":["Game Dev"],"content":"時間為2022的夏季, 在7月中旬, 我一位大學朋友 (@henrykuh) 邀請我一同參與他所主辦的 Game Jam, 在其活動的主題為驚喜 Surprise. 同時他也邀請我回 火柴共作坊 擔任程式區塊的負責人. 所以實質上, 這個 Game Jam 是用來讓我與其他在同個社群裡面的指導員 互相熟識, 以及交流的一個媒介. 這時候的我, 剛好完成了我上一份專案的開發計畫, 在沒有其他特別安排的 時期, 所以也沒有推辭, 就此決定參加很久沒參加的 Game Jam. ","date":"2022-08-29","objectID":"/blog/zh-tw/game-jam-aug-2022/:0:0","tags":["Game Dev"],"title":"Game Jam - 8月 2022","uri":"/blog/zh-tw/game-jam-aug-2022/"},{"categories":["Game Dev"],"content":"❓ 關於Game Jam 這個 Game Jam 的全名為 第五屆 DIY Game Jam: 驚喜 Surprise. 主辦單位為 自製遊戲公會. 時間是一個月, 比一般的 COVID-19 前的 Game Jam 的時間來的長上許多. 以往 Game Jam 時間都是 24 - 48 小時, 也就是一到兩天的時間 限制. 這是這個 Game Jam 相對比較特別的地方. 主題很明顯的, 名稱已經洩漏了, 是驚喜. ","date":"2022-08-29","objectID":"/blog/zh-tw/game-jam-aug-2022/:0:1","tags":["Game Dev"],"title":"Game Jam - 8月 2022","uri":"/blog/zh-tw/game-jam-aug-2022/"},{"categories":["Game Dev"],"content":"🔰 加入! 認識團隊 雖然以前我也曾短暫的待過在這 火柴共作坊 社群, 但對於其成員並不熟識. 所以這對我是個好時機 來建立一下人派. 並且可以順便訓練溝通/協作的能力. 團隊為5人成員, 1名企劃, 3名美術, 1名程序. 列表如下: Kyrie （企劃） Yi （3D美術） 黑攻 （2D美術、音樂） 特里斯卡 （2D美術） Jen-Chieh Shen （程式） \u003c- 這是我! 😎 想要小聊一下各位負責的區塊, 我認為專案最大的功臣是Yi, 再來是Kyrie. Yi 的實力我自己非常認可. 不管在專業態度, 專業實力, 都是一比一的強大. Kyrie 雖然有些缺乏經驗, 不過在專案的製作過程中, 展現出了熱情 💯, 和專業範圍的溝通能力, 這也在我的期望之中. 其餘美術也是非常厲害, 不過莫過於 溝通時間比較短, 所以沒能理解其他兩位的真實實力, 所以這裡就不提及! 😅 ","date":"2022-08-29","objectID":"/blog/zh-tw/game-jam-aug-2022/:0:2","tags":["Game Dev"],"title":"Game Jam - 8月 2022","uri":"/blog/zh-tw/game-jam-aug-2022/"},{"categories":["Game Dev"],"content":"💡 企劃發想, 程序製作 遊戲企劃本身我自己是沒有參與到, 加入之前, 好像已經由美術和企劃那邊搞定了. 不過在程序的製作過程中, 是有點難度的, 我們企劃在製作細節上是相較於缺乏經驗的, 我這邊大概整合了幾個我認為的問題, GDD並不夠完整, 且清新 專案發想人, 不明確? (結案之後我還是不知道是誰) 沒有核心思想, 建構的點子拿不定主意 在這裡強調一下, 我並不是要找「誰誰是戰犯」. 單純的把問題點出來, 以吸取經驗為主. 不過最終還是把遊戲 給做出來了! 可喜可賀! 🎉🎊 製作過程總是辛苦的, 但是製作出來的結果總是讓人非常興奮! ✨ ","date":"2022-08-29","objectID":"/blog/zh-tw/game-jam-aug-2022/:0:3","tags":["Game Dev"],"title":"Game Jam - 8月 2022","uri":"/blog/zh-tw/game-jam-aug-2022/"},{"categories":["Game Dev"],"content":"🖼️ 成品展示 ","date":"2022-08-29","objectID":"/blog/zh-tw/game-jam-aug-2022/:0:4","tags":["Game Dev"],"title":"Game Jam - 8月 2022","uri":"/blog/zh-tw/game-jam-aug-2022/"},{"categories":["Game Dev"],"content":"💬 結語 最後總結一下, 我認為這專案在 Game Jam 的作品來講算是非常出色的. 雖然並不是個完整的遊戲. 不過該有的都有, 細節上的把控也都有出來. 所以我是相對非常自豪的! 👍 唯一美中不足的地方, 除了 沒能騰出更多的 debug 時間以外, 就是參數的調整, 還有非常多地方並沒能調整, 說實有點可惜了! 🙏 ","date":"2022-08-29","objectID":"/blog/zh-tw/game-jam-aug-2022/:0:5","tags":["Game Dev"],"title":"Game Jam - 8月 2022","uri":"/blog/zh-tw/game-jam-aug-2022/"},{"categories":["Game Dev"],"content":"🔗 相關連結 作品: Alice In Surprise Game Jam 自製遊戲公會 火柴共作坊 ","date":"2022-08-29","objectID":"/blog/zh-tw/game-jam-aug-2022/:0:6","tags":["Game Dev"],"title":"Game Jam - 8月 2022","uri":"/blog/zh-tw/game-jam-aug-2022/"},{"categories":["Editor"],"content":"🔰 介紹 Eask的名字源自於Emacs Cask; 如果你已經有使 用過Cask的經驗, 那基本上你可以跳過這階段. 對於不了解或沒使用過的人, 在此我還是加減 介紹一下: (NOTE: 原則上這裡的Eask和Cask是可以互相替換的) Eask是個Emacs Lisp的套件管理工具, 有點類似於Node.js的npm, 但不全然是. 畢竟工具還不夠齊全, 而且Emacs生態也不適合npm那樣的模式. 所以簡單來說, Eask 可以是個劣化版的npm. 下面連結的 Why Cask? 有著更好的解釋 Why Cask? ","date":"2022-05-29","objectID":"/blog/zh-tw/emacs-eask/:0:1","tags":["Editor","Emacs"],"title":"Emacs Eask - Emacs Cask替代方案","uri":"/blog/zh-tw/emacs-eask/"},{"categories":["Editor"],"content":"❓ 那為什麼用要Eask, 而不是Cask? 以下是簡單的優劣展示表格: Behind technology Cross-Platform Emacs Version Size Cask Bash, Batch, and Python (Windows) ❌ Good on Linux and macOS, but it’s particularly bad on Windows 24.5+ 3,000+ lines makem.sh Shellscript ❌ Doesn’t work on Windows by default 26.1+ 1 file, 1200+ lines Eldev Bash, Batch, and Powershel, etc ✔ Good, but qutie slow on Windows 24.4+ 4,000+ lines Eask Node or Native Executables ✔ Good, and it can be compiled to native executables 26.1+ 3,000+ lines (這是我直接複製貼上的, 原文可以參考這.) Eask的優點來自於它背後的技術選擇是使用Node.js; 而不是基礎的Shellscript, Bash, Batch, 等等. 雖然必須使用Node runtime, 但我們可以透過pkg (感謝vercel)打包來解決這問題! (這樣我們就可以跳過安裝Node.js) 使用Node.js並且還多了一步npm install確實比較麻煩, 但這大概是Eask唯一的缺點. 好在 pkg解決了這問題! 我們接著看優點: Eask 可以包成原生程序, 這算是一個優點! 速度上相比可能會稍微快一些! 繼承了Cask的DSL設計; 基本上可以無痛轉移! Eask不像是Cask; 本身就是個Elisp檔案, 有點類似於init.el的功用 (這結合了Cask +Eldev的優點) 使用了高階語言JavaScript; npm有很龐大的生態, 如果有Emacs不方便做的, 我們可以 交由這層來做 (例: exec, init) Eask使用 yargs 來當作CLI解析器; 這促使我們 只需要專注在開發上即可! Eask不用每次都呼叫Emacs; 這在 Windows 很吃香; 因為Windows開進程非常慢 (這就是 為什麼Eldev在Windows系統下體驗不佳的原因) 跨平台; 目前除了Eldev其他都不支援Windows 非常容易擴充, 結構明確; 目前Cask, Eldev, 和 makem.sh每個單獨檔案都很大, 維護成本高且不易, 未來面對新功能也是比較吃力 全域-g旗標讓你可以更好管理你的Emacs配置 那Eask沒有缺點嗎?當然有! 開發比較困難, 你需要知道JavaScript和npm生態 Eask是採取一個指令一個檔案制; 所以有非常多的檔案散佈在各區 專案結構相比其他都複雜許多; 對於不習慣這種分類法的人會很痛苦 ","date":"2022-05-29","objectID":"/blog/zh-tw/emacs-eask/:0:2","tags":["Editor","Emacs"],"title":"Emacs Eask - Emacs Cask替代方案","uri":"/blog/zh-tw/emacs-eask/"},{"categories":["Editor"],"content":"🧙‍♂️ 結語 比較這麼多優缺點, 我還是會選擇Eask. 畢竟這專案未來的發展性會比其他的都高出許多.我認為 JavaScript和npm也非常好上手, 問題並不大! 我個人長期在Windows上使用Emacs; 其實是蠻折騰人的. 因為大部分的插件在Windows 下都是壞掉的, 好一點就是體驗不佳. 我很少會遇到體驗好的插件. 例如 magit, helm很慢. eping不支持Windows. docker.el上次安裝掛了, 等等. 多倒數不清. 以前大家都用Cask, 但都往往不在 Windows 上做測試; 因為難用, 測試起來也不方便. 還需要特別安裝Python, Python在Windows上的體驗也不好. 因此Eask誕生了, 兼容Cask的DSL並保持了工作流程的一致性. 希望大家多多使用Eask來執行跨平台的測試! 或許哪天Emacs在Windows下有更好的使用者體驗… 聽了這麼多, 你們怎麼看呢? 話說我因此學到了Hugo; 有空再來分享一下! ","date":"2022-05-29","objectID":"/blog/zh-tw/emacs-eask/:0:3","tags":["Editor","Emacs"],"title":"Emacs Eask - Emacs Cask替代方案","uri":"/blog/zh-tw/emacs-eask/"},{"categories":["Editor"],"content":"🔗 連結 https://github.com/emacs-eask/eask ","date":"2022-05-29","objectID":"/blog/zh-tw/emacs-eask/:0:4","tags":["Editor","Emacs"],"title":"Emacs Eask - Emacs Cask替代方案","uri":"/blog/zh-tw/emacs-eask/"},{"categories":["Life"],"content":"這是一篇又來記錄我生活上問到難題的文章. 不想接收負能量請離開! 進入正題, 這種情況已經不只一次了, 這是一個平時工作日的下午, 陰天沒有陽光, 濕氣非常沉重. “我升降桌大後天要來了, 要把舊的書桌撤掉!”. 這是已經預定好了行程. 我已經跟我 媽商量好, 要一起把原先的舊桌子給移除. 然後把新的升降桌移入. 這是一項大工程, 原先的桌子也不是便於攜帶的款式. 一開始也是透過組裝才能移進我的 房間. 問題來了, 我媽淡淡地說道: “那桌子我不幫忙, 自己搞定!” 這時我是錯愕的, 一開始講好一起弄, 然後又突然撒下一句我不弄. 我不懂她幫忙的定義. 我可以接受別人不幫忙, 但不能接受要幫又不幫, 這種模糊的答案. 不要那我就要自己 安排清理家具的公司. 那些都要時間, 突然不要, 直接把我打到牆上. 這都讓我的心情 起伏很大. 相處起來很累人. 如果不想幫忙, 請早點說, 不然就什麼都不要說. 😕 然後我不需要妳, 妳也不需要我, 我也長這麼大了. 那就不用互相往來, 各過各的或許是種不錯的生活方式? 那種要幫不幫 的生活態度, 對我這人好像太過困難了… 所以最後是怎樣? 妳想幫就幫到底, 不然就閉嘴? 🙄 ","date":"2022-05-03","objectID":"/blog/zh-tw/%E5%AA%BD%E5%AA%BD-%E8%A6%81%E5%B9%AB%E9%82%84%E6%98%AF%E4%B8%8D%E5%B9%AB/:0:0","tags":["Life"],"title":"❓ 媽媽, 要幫還是不幫? (短)","uri":"/blog/zh-tw/%E5%AA%BD%E5%AA%BD-%E8%A6%81%E5%B9%AB%E9%82%84%E6%98%AF%E4%B8%8D%E5%B9%AB/"},{"categories":["Web"],"content":"最近迷上的網頁生產器, 所以我決定為我自己造一個網頁生產器, 何不? 其中較大的原因是因為我可以運行我的 網站到免費的 GitHub 網頁運行服務. 不過我上一個2018的專案 API-Reference-Template. 的核心是服務器取向, 而不是生產器取向… 😨 製作一個靜態網頁生產器並不是很困難, 我認為一個靜態網頁的價值來自原前端和整體的使用體驗. 然而, 我已經有一個令我自己滿意的前端網頁. 所以我就沿用我之前寫的專案, 並直接提取其中的前端部分. 然後直接把服務器取向的核心改成生產器取向! 🎉🎉🎉 我直接把這個工具重新取名為 SiraDoc, 這樣一來我也能夠給其他的網頁當作模板使用! 🥳 ","date":"2021-09-26","objectID":"/blog/zh-tw/first-static-site-generator/:0:0","tags":["Web","generator"],"title":"第一個靜態網頁生產器","uri":"/blog/zh-tw/first-static-site-generator/"},{"categories":["Web"],"content":"🔗 Link https://github.com/SiraDoc/SiraDoc ","date":"2021-09-26","objectID":"/blog/zh-tw/first-static-site-generator/:1:0","tags":["Web","generator"],"title":"第一個靜態網頁生產器","uri":"/blog/zh-tw/first-static-site-generator/"},{"categories":["Unity"],"content":"追蹤了這篇 My disappointing experience using Unity in a CI pipeline, 我也認為這是我目前遇到的最大問題. 個人版本(免費)的授權系統是部分衝突到CI/CD的概念的, 原因是, 我們還是得手動更新授權至 UNITY_LICENSE 這個 GitHub secret (環境變數)裡面. 也導致了 我們全部的CI/CD並不是全部自動化的流程, 非常麻煩! 至於Plus/Pro使用者則沒有影響, 因為他們分 別使用了不同的授權系統! 😖 我們直接切至問題點, 我們應該要怎麼做? 要怎麼讓這流程更順暢? 我的方法就是自動化整個授權的驗證過程! 長話短說, 我開發了一個 node 包 unity-license-activate, 原開發者是 Mizo Take. 這個包使用了 Puppeteer 來完成整個驗證步驟, 讓我可以使用JavaScript操控瀏覽器, 非常方便且正是我們需要的解決方法! 😁 下一步, 我們只剩下要更新我們的 secret 至 UNITY_LICENSE 這個環境變數就好! 這些任務非常簡單, 我 們只需要下列的 GitHub actions 即可辦到. read-file-action, by Julian Gruber actions-set-secret, by Habid Enrique Manzur Restrepo 我們可以使用 read-file-action 來讀取下載好的 .ulf 檔案, 然後使用這個檔案的值給 actions-set-secrets. 記得要設置 ACCESS_TOKEN 到你的GitHub secret裡面. 這是用來從你的 workflow 更新和製造 GitHub secret 的. 完整的 workflow 檔案請看這裡. ","date":"2021-09-25","objectID":"/blog/zh-tw/automate-personal-license-activation-in-unity-ci/:0:0","tags":["Unity","CI/CD"],"title":"Unity CI自動化個人版授權","uri":"/blog/zh-tw/automate-personal-license-activation-in-unity-ci/"},{"categories":["Unity"],"content":"🔐 多重要素驗證 unity-license-activate 有可能會無法使用, 原因在於Unity驗證系統可能會要求6位的驗證碼到你的信箱. 如果要越過此步驟, 你必須 安裝 unity-verify-code 到你的 workflow 之中. 並且遵循這些步驟, 請看這裡. ","date":"2021-09-25","objectID":"/blog/zh-tw/automate-personal-license-activation-in-unity-ci/:1:0","tags":["Unity","CI/CD"],"title":"Unity CI自動化個人版授權","uri":"/blog/zh-tw/automate-personal-license-activation-in-unity-ci/"},{"categories":["Unity"],"content":"🔗 Links unity-license-activate unity-verify-code ","date":"2021-09-25","objectID":"/blog/zh-tw/automate-personal-license-activation-in-unity-ci/:2:0","tags":["Unity","CI/CD"],"title":"Unity CI自動化個人版授權","uri":"/blog/zh-tw/automate-personal-license-activation-in-unity-ci/"},{"categories":["Career"],"content":" 前言, 這是要給我\"老爸\"看的. 這種類似的文章, 實在很多. 所以我不會提及任何外面已經有的文章. 這文章將會是充滿我個人主觀 想法的文章. 歡迎你有不同的想法, 也可以完全不贊同我的想法! 👍 根據我老媽的說詞, 大家認為碩士生總比學士生還要來的有競爭力. 我是來顛覆你部分想法的! ","date":"2021-09-17","objectID":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/:0:0","tags":["Career","degree"],"title":"學歷或許沒這麼重要?","uri":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/"},{"categories":["Career"],"content":"🌏 台灣環境 過去的台灣非常注重學歷, 現在可能依然是. 所以我們建立學歷, 來讓人民學習, 並用知識的力量 來為台灣或許更多的國際競爭能力. 這一切彷彿非常美好, 原先的出發點也是非常正確. 我們開始注 重考試, 開始注重成績, 而因此有了唯有讀書高的氛圍. 但漸漸地不再注重人品, 道德觀念, 運動, 等等我認為對人來說也是不可或缺的一部分. 根據我在國外的經驗比較, 台灣是非常競爭的環境, 不管是從學生時期到出社會, 我們認為只要努力 就一定會有收穫. 這樣結果是種完美論, 我們 實際得到的卻往往比較少. 為什麼台灣(或型態類似的國家)工時這麼長卻依然沒有得到相應的回報? 一部分的原因我想應該是我們太過努力, 然而卻沒有足夠的時間休息, 沒有時間思考自己的人生和未來. 我們應該重視質量, 而不是數量, 特別是我國對岸有個快15億人人口的超級大國 (中國). 因為我們數量 根本壓倒性的不足阿!😨😱 反觀日本🗾是我們應該學習的對象, 雖然它們也足夠壓抑, 但起碼依然能夠 幫助我國在國際上有些許的競爭力. 太過努力但又沒能得到相應的回報會有怎麼樣的後果? 會導致很多人不再相信教育能為人帶來任何改變. 這當然是極其我不想看到的結果, 但現在的社會就有著類似\"博士滿街跑\", “失業率不斷上升\"的各種 危言聳動的新聞標題. 當然這也是事實, 我周遭的朋友就有很多人找不到工作或者找根本與大學無關 的工作. 台灣最大的問題之一, 就是我國並無與大國之間相互連結. 我不知道台灣什麼時候被世界拉開距離(我猜 大概硬體就算台灣巔峰了), 但我知道台灣與其他先進國家有著巨大的鴻溝, 這鴻溝也是為什麼台灣大學 會被很多人誤認為學店的學校. 因為你畢生所學的東西但卻沒能為你在工作上有任何的實質上的幫助, “那我為什麼還要上大學?”, 這種類似的聲音由從而生. 當人民認為學校沒有幫助, 導致更多人不願意 接受教育, 這樣會陷進一個惡性循環, 糟糕了! 😧😱 我個人認為台灣是個淘汰制的國家, ","date":"2021-09-17","objectID":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/:1:0","tags":["Career","degree"],"title":"學歷或許沒這麼重要?","uri":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/"},{"categories":["Career"],"content":"🌧️ 不要相信媒體 台灣的媒體真的是一個很糟糕的產業, 基本上標題與內容不符就算了, 台灣政府對於自由言論的把控也 是越加激烈. 基本上已經可以算洗腦的程度了…🤐 我會推薦有外語能的能力的人多多宣傳這方面的 訊息. 畢竟錯誤的訊息只會帶來更多的誤判. 就如同你參加化裝舞會但你沒有化妝的一樣尷尬.😦 因為這篇不是教學文章, 所以我在此不教人怎麼查詢正確的資訊的小技巧!🧐 ","date":"2021-09-17","objectID":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/:2:0","tags":["Career","degree"],"title":"學歷或許沒這麼重要?","uri":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/"},{"categories":["Career"],"content":"⌛ 過去和現在 在過去, 學歷或許非常重要. 但現今的台灣來說, 已經不再這麼重要了, 因為我們必須要做得更好才 能夠趕得上下一波國際浪潮. 就連國際大國都不一定會在乎學歷, 我們台灣小國又怎麼這麼注重學歷, 但不注重能力呢? 沒有學歷無所謂, 但你要有能力! ","date":"2021-09-17","objectID":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/:3:0","tags":["Career","degree"],"title":"學歷或許沒這麼重要?","uri":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/"},{"categories":["Career"],"content":"✒️ 結語 或許有些人會叫我滾到別的國家, 又或者別回來台灣. 我何嘗不想呢? 但我沒錢!😂 如果我真的討厭 自己的國家, 我想我也不會打這麼多廢話來點出問題. 不知道問題在哪, 是要怎麼改進? 就像工程師 一樣, 你不知道問題, 是要怎麼解決技術上的困難? 難道要擲筊還是問土地公嗎!?🤣 難怪說實話的人 都這麼讓人討厭😗, 我當然還是希望台灣未來能跟得上國際腳步, 所以我們的下一代才能有稍微更好點 的未來!😇😇 ","date":"2021-09-17","objectID":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/:4:0","tags":["Career","degree"],"title":"學歷或許沒這麼重要?","uri":"/blog/zh-tw/%E5%AD%B8%E6%AD%B7%E6%88%96%E8%A8%B1%E6%B2%92%E9%80%99%E9%BA%BC%E9%87%8D%E8%A6%81/"},{"categories":["Career"],"content":"亞洲父母時常把自己的小孩當作人生的第二生命，因此造成了傳承上的惡性循環。那為什麼不在自己的有 限生命裡做自己認為對的事情呢？這問題也時常困惑著我，到什麼什麼時候才是長大？時間？歲月？還是 說是經驗？ 我認為沒有所謂的「長大」，因為我們一生中都會有自己不知道的事情。先今2021年，人類平均壽命為79- 80歲，但我們需要學習的東西卻為人類2000多年來的歷史。也就是說，我們花費一生也沒辦法把所有東西 都學完！🤔 我認為學校是好的開始，但卻不是人生最終的答案！學習不應該只僅限制於學校內，而是應該融入於在生活 之中。學歷確實很重要，他能為你帶來工作，但也能為你帶來絕望。 ","date":"2021-09-15","objectID":"/blog/zh-tw/why-i-left-usyd/:0:0","tags":["Career","Education"],"title":"為什麼離開雪梨大學?","uri":"/blog/zh-tw/why-i-left-usyd/"},{"categories":["Career"],"content":"💬 Past experience 經驗 我高中曾經很迷茫，那時候的我選擇相信世界，相信家人的選擇（去ICA)，結果帶來了我更多的自暴自棄，那 時候的我真的非常痛苦。現在是我第二次感到迷茫，為了不重蹈覆徹，我想去相信我自己，而不是相信別人給 我做的決定。 ","date":"2021-09-15","objectID":"/blog/zh-tw/why-i-left-usyd/:1:0","tags":["Career","Education"],"title":"為什麼離開雪梨大學?","uri":"/blog/zh-tw/why-i-left-usyd/"},{"categories":["Career"],"content":"😨 Puzzled 害怕 現在的我依然很害怕，我害怕我出國後沒辦法求得足以我繳納房租的工作。我害怕我會窮的吃不了飯，結果變 成遊民。但那些並不能阻止我前進，因為我留在台灣也只是原地踏步，不如踏下去看看自己能衝到哪裡。未來 會發生什麼事情，誰都說不準！ ","date":"2021-09-15","objectID":"/blog/zh-tw/why-i-left-usyd/:2:0","tags":["Career","Education"],"title":"為什麼離開雪梨大學?","uri":"/blog/zh-tw/why-i-left-usyd/"},{"categories":["Career"],"content":"❗ Awakening 指引 經過高中一次的自暴自棄，讓我相信現在正是我從過去的經驗得到結果的時候！我想去試試自己的能耐，也認 為這才是對的選擇，因為未來沒有人可以為我的人生負責！父母不行，因為他們會先行老去。朋友不行，因為我 們思想獨立。兄弟姐妹，也將會有自己的人生！所以我唯一能做的就是盡力的去做，盡力的去學，盡力的去幫我 自己把未來的路鋪好！ ","date":"2021-09-15","objectID":"/blog/zh-tw/why-i-left-usyd/:3:0","tags":["Career","Education"],"title":"為什麼離開雪梨大學?","uri":"/blog/zh-tw/why-i-left-usyd/"},{"categories":["Career"],"content":"💬 Future 決定 回到原點，成長到底是什麼？我成長的過程並不是這麼順利，總是跌跌撞撞的，跌倒之後再爬起來，就好像小 baby在學走路一樣。不過誰不是這樣走過來的？你是，我是，大家都是！雖然現在的我還是感到很不安，但相信 那也是我成長過程的一部分！當然還是希望不要摔斷腿啦！ ","date":"2021-09-15","objectID":"/blog/zh-tw/why-i-left-usyd/:4:0","tags":["Career","Education"],"title":"為什麼離開雪梨大學?","uri":"/blog/zh-tw/why-i-left-usyd/"},{"categories":["Life"],"content":"這篇是特別針對給我這個偉大的老姐看的. 😒 我自己也不是很確定原因, 人在相處的時候互相不愉快. 絕對不會只是一方面的錯. 因為過程的最後不會有交集, 那探討這方面的問題一點也不重要. ","date":"2020-10-27","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/:0:0","tags":["Life"],"title":"為什麼我不再跟我姐說話 👧","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/"},{"categories":["Life"],"content":"❓ 問題 我把問題大概分為幾點, 根據我老媽跟自身的觀察. 老實說我自己都不知道這些是否正確. 但我可以肯定的是, 我老姐決不會認同. 因為她從來沒怎麼認同過我的論點. 😕 😧 家人應該要有所包容 學姊學弟制 ","date":"2020-10-27","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/:1:0","tags":["Life"],"title":"為什麼我不再跟我姐說話 👧","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/"},{"categories":["Life"],"content":"👪 家人應該要有所包容 這點我認同, 但我不覺得家人可以無限的包容一個人. 就像是久病床前無孝子. 即使是最好的家人都有可能會支離破碎. 而真實情況是, 大部分的家人不合就不在聯絡. 就如同我的朋友Matthew, 他一天基本不跟家人連絡. 因為他家庭困苦, 也沒有特別跟 自己的家人特別親密. 也很早就有自己的人生規劃. 我對家人相對於其他人特別好, 那是因為我更相信真正珍惜的, 更需要細心對待. 就像是我曾經的一個好朋友\"琮楠\"; 總拿一句, “我是他最好的朋友”. 然後每次都 遲到, 不然就放我鴿子. 我無法苟同最好的朋友是這樣被對待的. ","date":"2020-10-27","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/:1:1","tags":["Life"],"title":"為什麼我不再跟我姐說話 👧","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/"},{"categories":["Life"],"content":"😶 學姊學弟制 我知道台灣是個很注重前後備關係的國家. 我姊也不例外, 非常注重輩分的問題. 只要是我講話直接了點, 或者只要他主觀認為我對他不敬, 就會嚴厲的糾正我. 但我自己不同, 我並不喜歡因為他比我早生這種詭異的理由去選是否尊重一個人. 如果比我老的人都應該要尊重, 我想我應該尊重阿扁貪汙 唷? 我更相信是否尊重一個人, 是因為一個人是否有那價值, 是否應該被不被尊重. P.S. 很好笑的是, 我們只差一歲! 😬 ","date":"2020-10-27","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/:1:2","tags":["Life"],"title":"為什麼我不再跟我姐說話 👧","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/"},{"categories":["Life"],"content":"❤️ 其實她是好的, 那就是她 我只能說我盡力了. 我只是想要像同級生一樣的和我老姊說話. 想要平等平坐的相處. 但那或許就是她, 她就是這樣的人. 一輩子也不會對我有想法上的改變. 我就是那個 她想像中的蠢弟弟. 我們彼此都知道對方的優點, 也知道對方大概的性格. 其實最讓我灰心的事情是, 她不怎麼主動找過我. 😟 每當我老姊找我的時候; 我大部分時候是挺開心的! 😄 我希望我能像是朋友 一樣被對待. 起碼她對我說話會是客氣的! 😒 不過那就是她, 她也 不算我生命中意義中的壞人. 只是一個我終將無法好好相處的人. 就像我開頭說的, 這沒有對與錯, 只有能不能繼續相處. ","date":"2020-10-27","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/:2:0","tags":["Life"],"title":"為什麼我不再跟我姐說話 👧","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/"},{"categories":["Life"],"content":"👋 然後…? 這件事情沒有結束, 她依然是我老姊. 我們都長大了, 都是成人了. 已經不再需要責罵 去改變一個人. 我想最後就是像我朋友一樣, 能夠擁有各自的生活. 好好過著自己的人生吧? ","date":"2020-10-27","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/:3:0","tags":["Life"],"title":"為什麼我不再跟我姐說話 👧","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%86%8D%E8%B7%9F%E6%88%91%E5%A7%90%E8%AA%AA%E8%A9%B1/"},{"categories":["Life"],"content":"長期在國外生活的我, 已經很久一段時間沒有和家人住在一起. 這也時常讓我重新意識到 跟家人住有許多好處, 但事情總是正反兩面, 不會兩全其美. 以下閒聊, 以及抱怨. ","date":"2020-08-16","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E8%A8%8E%E5%8E%AD%E8%B7%9F%E5%AE%B6%E4%BA%BA%E4%BD%8F/:0:0","tags":["Life"],"title":"為什麼我討厭跟家人住","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E8%A8%8E%E5%8E%AD%E8%B7%9F%E5%AE%B6%E4%BA%BA%E4%BD%8F/"},{"categories":["Life"],"content":"在家吃飯無比壓力 有時候真的讓人覺得很無奈. 雖說我媽媽是個模範媽媽, 很會煮飯. 可是人不是機器人, 我媽也不是專業的廚師. 煮的東西也總是保持不一定的水準. 有時候蠻好吃的, 有時候 變得很難吃. 最可憐的是有時候主菜特別難吃又只有那一道菜的時候, 你就只好吃, 不然 就是不吃. 有時候跟老媽抱怨, 又會被嫌說我們不珍惜. 自己也感到內疚. 然後我媽就不 開心. 每天都是這個模式. 媽媽: 晚餐要吃什麼? 我: 我想...吃外面. 媽媽: 為什麼?晚餐家裡有煮了阿!(一臉疑惑並皺眉) 如果我選擇繼續說, 我: 我覺得... (我的各種理由) 媽媽: 反正在家裡吃就對了! (反正不給過) 如果我選擇不反抗, 我: 好吧. 那就吃吧. 媽媽: 好啊! 那妳出去吃阿! (不開心地走開) 365天上演這種劇情, 不累嗎? 我都不用導演幫我排演了! 😭 所以我自己很喜歡一個人在外面住. 我可以自己選擇想吃的, 也不用每天每天每天 都要為一個無關緊要的事情感到煩惱. 長期的煩惱,和累積起來的壓力讓我喘不過氣. 真的讓我無比想離開家裡. 既然做不到每天保持一個水準, 就不要強迫家人在家一起吃飯. 而且小孩也大了. 何必 要強制自己的小孩跟家長吃飯. ","date":"2020-08-16","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E8%A8%8E%E5%8E%AD%E8%B7%9F%E5%AE%B6%E4%BA%BA%E4%BD%8F/:1:0","tags":["Life"],"title":"為什麼我討厭跟家人住","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E8%A8%8E%E5%8E%AD%E8%B7%9F%E5%AE%B6%E4%BA%BA%E4%BD%8F/"},{"categories":["Life"],"content":" 這篇不代表所有台灣人都有此行為, 表示不以偏概全! 這篇不代表台灣人因此犯賤, 單純討論台灣時事! 先聲明, 我自己並不是個籃球員. 也不是個任何運動項目的運動員. 我只是個單純喜歡打籃球的人. 只是單純作為喜歡運動的人去評論在台灣打球的風氣. :P 我上國中之前有打過一段時間, 後來大學在美國讀書的時候, 變得比較常碰球, 不過主要以街球居多. 並沒有受過什麼正式訓練. 這裡主要寫下我自己從美國回來後比較跟台灣打街球的差異. ","date":"2020-08-15","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/:0:0","tags":["Life","Basketball"],"title":"🏀 為什麼我不在台灣打籃球?","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/"},{"categories":["Life"],"content":"💬 差異的開始 先來講講我在美國和在台灣打球的切身感受. 在美國打球的風氣算是良好. 可能在教育和觀念上 都比較強的情況下. 不管是進攻還是防守, 犯規的次數遠少於台灣打球的次數. 在碰撞上面, 美國的碰撞強度是很激烈的, 不過我最喜歡的一點是起碼沒犯規. 在台灣打球時常受傷, 不是因為 碰撞很激烈, 大多數是因為犯規造成. 至於為什麼台灣打球犯規次數會這麼高呢? 我主要歸列於以下兩點. 1. 籃球教育水平不高 👎 以前我在台灣讀書的時候, 籃球課程真的沒教什麼東西(現在有很大的進步). 以至於年齡在我之上的人在 籃球的規則認知上有很大的缺口. 就如同在打桌遊, 不按規則來一樣, 讓人根本玩不下去. 就像是玩 線上遊戲, 一堆外掛嚴重影響遊戲品質. 不懂沒有關係, 可以慢慢學. 學校沒有教也沒關係, 現在有 網路, 自學真的很方便. 以下附上國際規則書連結. FIBA規則書: https://www.fiba.basketball/documents/official-basketball-rules-2018.pdf 2. 輸贏很重要, 甚至不擇手段 👊 這種情況在台灣, 相對於美國真的是比較常見. 或許是台灣的教育體制下, 讓許多台灣人對於勝敗看得 非常重要. 這裡並不是在說, 輸贏並不重要. 有求勝心當然是好的. 但當求勝大過於任何一切, 變成不 擇手段. 導致打球不講理, 不看規則, 我說的算的一堆理由. 那已經不是個良性競爭了. 良性的競爭應 該是, 自己跟對手之間互相求進步所產生的. 但當不再是那樣的情況, 就會變成如何陷害對方. 這也造就了為什麼籃球雖然是國民運動, 但依然在國際打不出成績. (互相陷害要怎麼跟每天進步的比?) 在美國打街球的這段時間, 讓我感覺到籃球風氣良好, 即使有輸贏對方也會很熱心的跑過來跟我說握手, 說一聲’Good Game'. 表情非常滿足的感覺打了一場好的球賽. 這是我在台灣從未感受到的感覺. 也讓我 重新的愛上籃球這個運動. 反之, 在台灣打球, 時常會心情不好. 大多不是因為輸球, 而是在於要對方打 球髒, 小動作很多, 犯規次數高, 且不講理. 根本沒辦法打一場讓人心服口服的比賽. ","date":"2020-08-15","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/:0:1","tags":["Life","Basketball"],"title":"🏀 為什麼我不在台灣打籃球?","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/"},{"categories":["Life"],"content":"💧 碰撞強度 在台灣時常聽到別人說, 台灣碰撞強度不夠. 這有一些是一定的. 不過有些我個人覺得算激進的運動人士. 會聽到打球打到流血. 以下貼上相關連結. Blood rule: https://en.wikipedia.org/wiki/Blood_rule 大部分國外的運動員還是非常保護自己的. 碰撞強度跟犯規受傷基本上還是兩碼子的事情. 💢 ","date":"2020-08-15","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/:0:2","tags":["Life","Basketball"],"title":"🏀 為什麼我不在台灣打籃球?","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/"},{"categories":["Life"],"content":"延伸 謝謝你看完的這些廢話, 打這篇的用意單純就是在我看來台灣跟美國的打球文化. 並沒有特別貶低 台灣人. 也不覺得美國人打球會比台灣人厲害. 單純就是在打球造詣和概念上面上有所差異, 簡單 來說就是教育水平低下. 我個人是希望台灣在這方面能有所突破, 對我來說我真的很熱愛籃球. 我很喜歡跟著高水平的人有公平 的競爭. 也看到年輕一代的人有著顯著的成長. 我感到非常欣慰且開心. 畢竟整體而言我們的下一代的 籃球教育水準還是有的, 雖然進展緩慢, 但總比沒有來的好! 😄 ","date":"2020-08-15","objectID":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/:1:0","tags":["Life","Basketball"],"title":"🏀 為什麼我不在台灣打籃球?","uri":"/blog/zh-tw/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E4%B8%8D%E5%9C%A8%E5%8F%B0%E7%81%A3%E6%89%93%E7%B1%83%E7%90%83/"},{"categories":["Philosophy"],"content":"這是我曾經寫給我朋友的話, 我在此把它紀錄下來. 此話始於, 2020-05-06 (真的是我想的嗎? 我自己都感到驚訝阿!😮) 面對困難的時候, 人會感到害怕很正常, 或許是一個過程, 害怕會促使一個人的成長(看事情)? 就讓他去害怕吧! 不要放棄的絞盡腦汁的去思考, 思考問題, 努力的去想!如果到時候沒有辦法 解決, 不代表未來沒辦法解決, 也不代表你很失敗. 人在面對太過嚴苛的處境很脆弱, 在適時的挑戰面前才能進步, 逃避沒有什麼, 我逃避我英文底子 爛27年😏, 在今年終於有機會證明我也能考進世界排名前50名😂~ 我到前幾年才認識到逃避沒什 麼, 因為我回來解決了! 雖然有點久😁😙~ 每個人都有被擊倒的時候, 在爬起來就好, 人就是這麼狼狽地在成長. 你是, 我是, 大家都是. 沒有無敵的超人, 只有認識到這點的人才是無敵的!🤪😂 ","date":"2020-05-06","objectID":"/blog/zh-tw/%E9%81%87%E5%88%B0%E5%9B%B0%E9%9B%A3/:0:0","tags":["Philosophy","delima"],"title":"遇到困難","uri":"/blog/zh-tw/%E9%81%87%E5%88%B0%E5%9B%B0%E9%9B%A3/"},{"categories":["Life"],"content":"今天來講講我對台灣人材流失的原因，我從美國畢業回來後，因為沒有資歷時常被公司壓。 我其實能夠理解公司不信任我的原因，但讓一個能力不行但卻又資歷的人有較好的待遇。 不經會讓人覺得「那我何必努力呢？反正讓時間帶過就好，薪水自然漲。」這樣的陋習。這 樣子跟共產「讓別人做事就好，我偷懶！」又有什麼兩樣？自然的，我不想熬兩三年，因為這 兩三年時間對我很寶貴（我不喜歡浪費時間）。所以我選擇離開台灣。不知道有沒有人有跟 我一樣的想法？ ","date":"2019-12-17","objectID":"/blog/zh-tw/%E4%BA%BA%E6%89%8D%E6%B5%81%E5%A4%B1%E5%8F%B0%E7%81%A3/:0:0","tags":["Life"],"title":"人才流失(台灣)","uri":"/blog/zh-tw/%E4%BA%BA%E6%89%8D%E6%B5%81%E5%A4%B1%E5%8F%B0%E7%81%A3/"},{"categories":["Industry"],"content":"這是我曾經寫給我朋友的話, 我在此把它紀錄下來. 此話始於, 2020-05-06 (真的是我想的嗎? 我自己都感到驚訝阿!😮) 面對困難的時候, 人會感到害怕很正常, 或許是一個過程, 害怕會促使一個人的成長(看事情)? 就讓他去害怕吧! 不要放棄的絞盡腦汁的去思考, 思考問題, 努力的去想!如果到時候沒有辦法 解決, 不代表未來沒辦法解決, 也不代表你很失敗. 人在面對太過嚴苛的處境很脆弱, 在適時的挑戰面前才能進步, 逃避沒有什麼, 我逃避我英文底子 爛27年😏, 在今年終於有機會證明我也能考進世界排名前50名😂~ 我到前幾年才認識到逃避沒什 麼, 因為我回來解決了! 雖然有點久😁😙~ 每個人都有被擊倒的時候, 在爬起來就好, 人就是這麼狼狽地在成長. 你是, 我是, 大家都是. 沒有無敵的超人, 只有認識到這點的人才是無敵的!🤪😂 ","date":"2019-11-12","objectID":"/blog/zh-tw/software-industry-taiwan/:0:0","tags":["Industry","experience"],"title":"台灣軟體行業","uri":"/blog/zh-tw/software-industry-taiwan/"},{"categories":["Game Dev"],"content":"WIP ","date":"2019-11-12","objectID":"/blog/zh-tw/art-design-programming/:0:0","tags":["Game Dev"],"title":"美術, 設計, 程式","uri":"/blog/zh-tw/art-design-programming/"},{"categories":["Game Dev"],"content":"遊戲裡的編程可能是因為我就讀藝術學校, 很多人覺得我計算機領域很厲害. 我很幸運在大學裡認識了各行各界的人, 有的是大公司來進修的，有的是從 別的領域過來的. 其中做遊戲的科系很特別，因為遊戲需要的人太雜, 主要 分成三類, 美術, 設計, 程式. 關於遊戲領域我會在特別寫一篇, 在此篇先不討論. 程式一直都是我們學校的弱點, 我們學校美術總是多於程式, 因此我在程式 方面多下了很多功夫, 也因此愛上了計算機的領域. 因為我非本科生, 所以我並不知道我的見解是否完全正確. 我只知道我的一些 計算機領域的朋友以及老師都十分贊同我的想法. 首先, 計算機是很複雜的東西, 所以就算自己有什麼不懂的地方, 那很正常. 計算機是我認為其中一個最難的科 學之一, 因為其精密程度之高. 更重要的是, 人類學習機器的語言本來就比人類 學習人類的語言要難. 這也是為什麼我時常不在我非本科的朋友面前很少提工作 的事情, 因為通常的反應就是沒反應. 時常剛解釋完一個名詞就是接著解釋另一 個名詞. 畢竟是機器的東西, 所以我也不在提了. 由於我是從遊戲領域那邊起家的, 對於一般的程序員來說, 本質上是有很大的不同的. 我只能說我很幸運能夠從遊戲起家, 光是一個單機遊戲就要學我認為最難的程式 語言C++. 接著學遊戲引擎，引擎又分「作業系統層」,「平台層」,「腳本層」, 「資源管理」,「渲染層」,等等.這些層級就算一天寫8小時代碼一個層級的精通 並實現代碼平均也要幾個月的時間. 這也是為什麼遊戲引擎開發時間總是大概落在最 少3年到4年之間, 而且通常可能還很簡陋. 拿個舉例, 資源管理就需要學編碼/密碼學. 然後再齊集封包, 還不提效能, 安全性, 等等. 接著是線上遊戲, 就需要學Socket. 一般是不會用HTTP的, 因為那太慢. 抱歉了 寫web的大大們, 遊戲基本一定從TCP/UDP開始. 從TCP/UDP開始就會碰到基礎的 blocking IO、non-blocking IO、synchronous IO、asynchronous IO. 接著封包處理, 資料序列化, 安全性, 等等. 學完之後就是資料庫, SQL, MySQL, mongoDB, 等等. 資料庫算是整體較為簡單的, 依照遊戲可能還需要學HTML/CSS/PHP來建立官網辦 帳號, 查資料, 等等. 光是遊戲開發就必須跨三個領域, 遊戲編程, 網路編程, Web開發. 而且這還只是 程式部分, 有經驗的程式開發人員還強調與美術配合, 與設計人員做協調. 因為根據遊戲引擎的不同, 美術的設計方式也會不同, 也會影響效能， 也可能不易維護. 音效跟美術大同小異, 在此不提. 設計跟遊戲有關, 也不提. 這裡我只說了個大概, 畢竟真的有太多東西, 而且要講細節的話, 沒有特別研究 的人可能會聽不懂. ","date":"2019-11-12","objectID":"/blog/zh-tw/programming-in-game/:0:0","tags":["Game Dev"],"title":"遊戲裡的編程","uri":"/blog/zh-tw/programming-in-game/"},{"categories":["Legacy"],"content":"Demo: http://www.jcs-profile.com:3000/Manual/index.html GitHub Repo: https://github.com/jcs090218/API-Reference-Template 因為平時很常寫很多的工具, 最常寫的就是API. 為了解決每次寫一個工具就 必須從頭建立檔案的問題, 決定花時間來寫一個專門給別人閱讀API用的網站. 以下是使用的技術資訊. ","date":"2018-11-12","objectID":"/blog/zh-tw/api-reference-template/:0:0","tags":["Legacy"],"title":"API參考模板","uri":"/blog/zh-tw/api-reference-template/"},{"categories":["Legacy"],"content":"前端 Basic HTML/CSS Basic JavaScript and jQuery ","date":"2018-11-12","objectID":"/blog/zh-tw/api-reference-template/:0:1","tags":["Legacy"],"title":"API參考模板","uri":"/blog/zh-tw/api-reference-template/"},{"categories":["Legacy"],"content":"後端 Express.js ","date":"2018-11-12","objectID":"/blog/zh-tw/api-reference-template/:0:2","tags":["Legacy"],"title":"API參考模板","uri":"/blog/zh-tw/api-reference-template/"},{"categories":["Legacy"],"content":"範例 JCSUnity Scripting Reference JCSEgret Scripting Reference ","date":"2018-11-12","objectID":"/blog/zh-tw/api-reference-template/:1:0","tags":["Legacy"],"title":"API參考模板","uri":"/blog/zh-tw/api-reference-template/"},{"categories":["Web"],"content":"Link: MapleStory Survival Kit 這是我學校第一堂網頁設計課所做的網頁. 因為之前是做遊戲的, 所以想挑戰看看 網頁設計能夠做到什麼地步來做到近乎渲染遊戲的方式. 這個網站有以下幾個亮點, 視差 聲音 轉蛋機 ","date":"2018-08-14","objectID":"/blog/zh-tw/parallax-website/:0:0","tags":["Web","parallax"],"title":"視差網站","uri":"/blog/zh-tw/parallax-website/"},{"categories":["Web"],"content":"👁️ 視差 我看大多範例的視差效果都是一張圖在後面, 身為一個遊戲工程師不經覺得這 樣的設計有些粗糙. 也想要設計看看CSS能夠做到什麼地步. 很幸運地在自己多 方琢磨之後,了解到CSS的動畫機制. 可以有機會的展示CSS的強大動畫效果. 視 差的動畫效果可以由左上方小小的控制板來操作. ","date":"2018-08-14","objectID":"/blog/zh-tw/parallax-website/:1:0","tags":["Web","parallax"],"title":"視差網站","uri":"/blog/zh-tw/parallax-website/"},{"categories":["Web"],"content":"🔊 聲音 這是我第一次使用JavaScript裡面的聲效引擎. 在完全不了解的情況下,我選擇 使用第一個出現在我面前的一個函式庫 ion.sound. 這個函式庫非常簡單且強大, 看一下範例就可以清楚知道要怎麼使用. ","date":"2018-08-14","objectID":"/blog/zh-tw/parallax-website/:2:0","tags":["Web","parallax"],"title":"視差網站","uri":"/blog/zh-tw/parallax-website/"},{"categories":["Web"],"content":"🎟️ 轉蛋機 如果你有拜訪我的這個作品網站,你會在最左邊的網站看到三台轉蛋機. 當你用鼠標指著他的時候, 他就會開始掉落物品! 這是一個簡單的展示 使用JavaScript, 以每秒30偵的速度去渲染掉落動畫. ","date":"2018-08-14","objectID":"/blog/zh-tw/parallax-website/:3:0","tags":["Web","parallax"],"title":"視差網站","uri":"/blog/zh-tw/parallax-website/"},{"categories":["Unity"],"content":"這是一個簡易介紹給予展示 JCSUnity 是如何做到遊戲儲存機制. 在Unity Engine裡面, 有三個主要方式做遊戲資料儲存使用C#語言. JCS_BinGameData - 二進制格式 JCS_XMLGameData - XML格式 JCS_JSONGameData - JSON格式 ","date":"2018-07-03","objectID":"/blog/zh-tw/save-system/:0:0","tags":["Unity","system"],"title":"JCSUnity - 儲存機制","uri":"/blog/zh-tw/save-system/"},{"categories":["Unity"],"content":" JCSUnity Repo: https://github.com/jcs090218/JCSUnity ","date":"2018-07-02","objectID":"/blog/zh-tw/overview/:0:0","tags":["Unity","framework"],"title":"JCSUnity概要","uri":"/blog/zh-tw/overview/"},{"categories":["Unity"],"content":"前言 這裡要介紹什麼其實真的不好說, 這是我已經開發將近3年的框架. 這個是我在大三的時候開發的框架, 也算是比較完整的框架. 在閱讀此篇之前,讀者最好要先了解框架,工具箱,圖書館,等等類似的東西的差別, 在這裡就不多贅述. 在我寫這個工具的時候, 我已經使用Unity大約兩年的時間. 從中做了不少的遊戲,畢竟課業需求,做遊戲如同家常便飯一樣. 寫程式也已經邁入第三年, 那時候的我才剛學完\"資料結構\",“演算法”,“設計模式”. 特別是設計模式, 對於遊戲開發是特別有用的. 因為大多軟體架構都 是非常小的, 不然就是已經被前人給包好了. 例如, .NET框架, Visual BASIC/C++/C#, NetBean Graphic, 等等. 但是遊戲不同, 遊戲的架構通常再怎麼包都是非常大且複雜的. 了解底層運作更是十八般武藝… 在這些基礎之上,這個已經是我搭建的第三個框架,前面兩個我已經記不起來了. 我只記得其中一個是用AS3跟Starling框架配合. 對於寫API函式我已經算是有一定程度上的了解, 但是對於遊戲引擎的架構就有點顯得無知了. 在寫這個的時候我已經研究完了基 礎的遊戲引擎結構, 但是依然對於Unity Engine專門設計的API以及操作並不是很了解. 這使得我的工具顯得有點不是非常一致. 但是在我寫這個文章的時候, 這個工具已經大到非常難以管理的地步. 裡面的我自己寫的腳本大約400到500個. 每個腳本都是可以 獨立運行的,所以變化上由想可知是非常多的,同時也帶來了可能不必要的效能. ","date":"2018-07-02","objectID":"/blog/zh-tw/overview/:1:0","tags":["Unity","framework"],"title":"JCSUnity概要","uri":"/blog/zh-tw/overview/"},{"categories":["Unity"],"content":"介紹 JCSUnity是一個可快速搭建自己遊戲成品的高完成度框架. 由於框架的設計符合 Unity引擎遊戲設計師的設計理念, 版本相容度是非常高的, 基本上每次的Unity 版本升級都不會有問題. 這個框架更是完美呈現了框架的用意, 框架能提升開發者 的產能(productivity). 本人原本需要開發15周的時間能壓縮到3周, 因為這個 框架擁有了大多數遊戲都需要的設置, 但是Unity引擎本身並沒有提供的設置. 例 如, 慢慢地切換場景, 切換背景音樂, 銀幕等比例相容, 等等. 這個框架能讓遊戲 開發者高度集中在遊戲核心上的開發, 進而發展更多好玩的遊戲. ","date":"2018-07-02","objectID":"/blog/zh-tw/overview/:2:0","tags":["Unity","framework"],"title":"JCSUnity概要","uri":"/blog/zh-tw/overview/"},{"categories":["Unity"],"content":"可獨立運行腳本 接著上面所說的, 什麼是可獨立運行的腳本呢? 比如我有三個腳本, 1. 繞圓圈行為 2. 震動效果 3. 上下搖擺效果 這三個腳本都能夠獨立運行並且互不干擾運作, 就是能獨立運行腳本. 那 這三個腳本總共會有多少的變化呢? 總共7種. 公式如下: 7種行為變化 = 本身3種 + (繞圓+震動) + (繞圓+上下搖擺) + (震動+上下搖擺) + (繞圓+震動+上下搖擺) 如果了解引擎架構的人大概都會選擇這樣的想法, 這樣能夠避免耦合(decoupling) . 也能夠讓設計師們隨時隨地的使用來搭配它們自己想要的效果. 可以減輕不少程 式設計師的工作負荷. 缺點則顯而易見, 就是沒辦法最大化的提升效能. 至於為什 麼等下會提到. 3 Basic Actions 本身3種 (Circle Action 繞圓 + Shake Effect 震動) + (Circle Action 繞圓 + Wave Action 上下搖擺) + (Shake Effect 震動 + Wave Effect 上下搖擺) (Circle Action 繞圓 + Shake Effect 震動 + Wave Action 上下搖擺) ","date":"2018-07-02","objectID":"/blog/zh-tw/overview/:3:0","tags":["Unity","framework"],"title":"JCSUnity概要","uri":"/blog/zh-tw/overview/"},{"categories":["Unity"],"content":"腳本上的設計 腳本上要求這樣高自由度, 難免會需要一個共同的規範. 畢竟不可能所有的一個 獨立運行腳本就有一個自己的規範, 那不就天下大亂了? 我選擇善加使用Header屬性, 再加上一些自己規定的專有名詞來達成這項任務. #if UNITY_EDITOR [Header(\"** Helper Variables (JCS_ExampleScript) **\")] /// \u003csummary\u003e /// 這是個幫助你在環境中測試的變數. 注意! 這個並不會出現在你的實際遊戲之中. /// \u003c/summary\u003e float helperVar = 0.0f; #endif [Header(\"** Check Variables (JCS_ExampleScript) **\")] /// \u003csummary\u003e /// 只拿來看的, 請勿直接操作! /// \u003c/summary\u003e float checkVar = 0.0f; [Header(\"** Initialize Variables (JCS_ExampleScript) **\")] /// \u003csummary\u003e /// 只有在遊戲初始化階段受到影響. /// \u003c/summary\u003e float initVar = 0.0f; [Header(\"** Runtime Variables (JCS_ExampleScript) **\")] /// \u003csummary\u003e /// 遊戲運行階段會受到影響. /// \u003c/summary\u003e float rtVar = 0.0f; 官方說明請看, 這裡. ","date":"2018-07-02","objectID":"/blog/zh-tw/overview/:4:0","tags":["Unity","framework"],"title":"JCSUnity概要","uri":"/blog/zh-tw/overview/"},{"categories":["Unity"],"content":"使用 JCS_ 檔名,不使用Namespace 這個原因其實出奇的簡單, 在早期的Unity版本不接受同名稱檔案. 為了相容所有可能 的專案, 只能選擇在檔案名動手腳. ","date":"2018-07-02","objectID":"/blog/zh-tw/overview/:5:0","tags":["Unity","framework"],"title":"JCSUnity概要","uri":"/blog/zh-tw/overview/"},{"categories":["Editor"],"content":"實際上,我並不是個Emacs或Vim專家.我只是單純剛好在這兩個編輯器上面都有些了解. 如果你查看我的兩個 Emacs 和 Vim 的repo,那可能是最糟的經驗. 我秉持著一個想法, 那就是編輯器對我只是個工具. 在我對於我的工具不滿意的時候我才會選擇去修改我的工具. 不是很必要的我就不會 特地去強求. 畢竟我不是要再造一個輪子,也沒打算讓Emacs或Vim分個高下. 先說結論,我是Emacs的使用者. 但為什麼我是Emacs使用者不是Vim使用者對我來講是 有一套根據的. 首先我對於開發者的理念以及角度做了一個簡單的對比. 依照我的個人 經驗以及橫跨世界的開發者角度來看,使用Emacs的通常都是開發軟體(Software Engineering)的較多. 則使用Vim的大多是駭客(Hacker)或者從事資訊安全(Cyber Security). 其實這個道理很簡單,相信可能已經很多人都發現了. 身為軟體工程的我 會更喜歡Emacs本身設計師的理念, 他讓了軟體設計師有了強大的韌性以及空間去做最 大幅度上的修改. 因為軟體工程師的工作大多都需要在一個軟體待得很久, 這樣聽起來 是不是對某個東西很熟悉呢? 沒錯, 那就是一個Integrated Development Environment (IDE). 當然一定會有人開始要爭論Vim也做得到, 但是那並不是Vim 本身的設計理念. Vim本身是為了快速地能夠在終端修改文本而產生的編輯器. 他是為了 快速而生的, 所以在建造這個Vim的時候並沒有在修改上有其專門性. 在這方面在Emacs 面前較會略為遜色, 相反的Vim在速度以及需要跨足到其他軟體的行業來講是非常受到 歡迎的,以及近年來改的版本也越來越傾向於Emacs那樣的設計了! 但同時也衍生了一 個問題,如果Vim是為了快速修改文本,再增加每一個插件的同時,也帶來了效能上的消耗. 打開文本的速度會越來越慢. 這樣的衝突實在讓我百思不得其解… 至於Emacs本身設計 的同時就打算在這上面有所顧忌了,所以他一開始就沒打算跟Vim去比速度. 這也是為什麼 大多Vim使用者覺得Emacs太肥,因為Emacs本身的設計就不是為了速度. 他是選擇夾在類 Vim跟大多的IDE中間. 這剛好滿足了軟體工程師討厭的肥大的IDE,以及同時保留了IDE大 多數或者更棒的功能! 但是這麼棒的東西為什麼還是這麼少人用? 原因很簡單, 我個人學Emacs的時候是學 Raw Emacs, 也就是什麼都沒有開始建起來. 我特別能夠感受到Emacs它的獨特性以 及它的不友善性… 它官方的文檔我覺得做的不算好,教學視頻也不是很多, 也沒有 Vim口令那樣的設計巧思. 根本就是一塊石頭. 在這樣的情況下,有誰會想用它? 在 學習曲線這麼陡的道路上,以及大多數的功能還要自己去寫,寫之前還得要去學Emacs 它們搭建的腳本層的語言/語法(Emacs Lisp),這些都是不少的工程以及時間上的花費. 我學到現在第四年了,我依然還沒辦法很精通它. 也沒打算精通了,畢竟平時開發上我 認為比較重要. 最後我想補充一些想法, 這些都是我的個人經驗不代表我說的一定都是對的. Emacs有 Emacs的好處, Vim也有Vim的優點. 我也時常在服務端的時候使用Vim, 因為這是最 快的手段,而且還是大多系統built-in的. 所以我想結論是沒有最棒的編輯器,只有善加 利用工具的使用者! ","date":"2017-12-10","objectID":"/blog/zh-tw/emacs-vs-vim/:0:0","tags":["Editor","Emacs","Vim"],"title":"Emacs vs Vim","uri":"/blog/zh-tw/emacs-vs-vim/"},{"categories":["Editor"],"content":"WIP ","date":"2017-11-12","objectID":"/blog/zh-tw/best-editor-ever/:0:0","tags":["Editor"],"title":"最好的編輯器","uri":"/blog/zh-tw/best-editor-ever/"},{"categories":["Productivity"],"content":"WIP ","date":"2017-09-27","objectID":"/blog/zh-tw/framework-i-have-been-working-on/:0:0","tags":["Productivity","framework"],"title":"一直以來製作中的框架","uri":"/blog/zh-tw/framework-i-have-been-working-on/"},{"categories":["Others"],"content":" 給予那些想跟我合作, 但並不完全信任或了解我的人. 很多人問過我想幹什麼?對我的計畫有許多的疑惑與不了解. 所以我就打算乾脆打一篇 放著以方便我自己去做解釋. 首先想要了解我的計畫是沒有太多用處的. 請先了解我這個 人的特質. 我在小學六年級就有了第一次想要創業的想法, 原因不外乎就是因為我自己 家是有事業的. 從小看著自己爸爸媽媽過著有著自己事業的生活, 深深地影響我對自己 未來的計劃. 簡單的說,創業我比誰都很早就開始準備;也準備了超過10年的時間. 不管 是在大學期間的自我學習都跟著我未來的創業路程有著深遠的考慮而做出的決定. 對於 我自己的修成就是著重在如果開創自己的事業為主. 例如, 領導能力, 技術能力, 思想, 溝通與協調能力上面都做了充分的準備. 基於上面的背景敘述, 我在大學特別向所有的領域有了個特別的研讀. 因此我或許不能 在某個特地的領域裡面當專家. 也能夠判別並分析出差異性. 我的領域學習路程是這樣 過來的. 真是多虧了我的大學(AAU)提供的多變的學習環境! ❗❗ [ATTENTION] ❗❗ – 這途中都有穿插, 不可能全部都依序研讀! ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:0:0","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"📚 工程領域 軟體 -\u003e 韌體 -\u003e 硬體 -\u003e 電子/電機 -\u003e 機械工程 ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:0:1","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"📚 科學領域 物理學 -\u003e 數學 -\u003e 圖學 -\u003e 聲學 -\u003e 電學 -\u003e 光學 -\u003e 熱學 -\u003e 地學 -\u003e 流體力學 -\u003e　天文學 -\u003e 化學 -\u003e 生物學 -\u003e 人類學 ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:0:2","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"📚 文學領域 哲學 -\u003e 心理學 -\u003e 人類行為學 -\u003e 創業學 -\u003e 行銷學 -\u003e 智慧財產權(法律) -\u003e 經濟學 ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:0:3","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"📚 語言 中文 -\u003e 英文 ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:0:4","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"📚 設計領域 遊戲開發 -\u003e 2D動畫 -\u003e 2D視覺特效 -\u003e 3D建模 -\u003e 3D視覺特效 -\u003e 色澤分析 -\u003e 拆UV -\u003e 材質 -\u003e 綁骨骼 ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:0:5","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"📚 其他分支 建模 -\u003e 透視 -\u003e 平面設計 -\u003e　室內設計 -\u003e 建築設計 -\u003e 工業設計 如果你好奇我想幹嘛?這個很難回答, 因為我想做的事情很多. 我本身專攻軟體科學. 我並不受限於某個特定的產業. 如果你今天懂得比我多, 那我們可以探討看看我們要做什 麼. 當然可以的話我會選擇我最擅長的科技業,軟體工程. 但如果你懂得比我少, 可以 選擇是充實自己, 又或者討論你能做什麼? 我相信肯讀這篇文章的肯定認可我的專業能力也對自己有相當的自信,並有著自己的理想. 但是創業並不是玩遊戲. 既然要做就要盡自己所能的做到最好. 但不是一味地不經思考的做下去! 這跟領導力有關, 能夠能屈能伸才是個夠格的 領導人. ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:0:6","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"📈 潛在價值 我個人非常看重潛在價值. 我之所以專攻軟體就在於軟體的潛在價值非常之高. 所以請在跟我pitch點子的時候,有一個好並好看的前景. 誰都可以做一個沒有前景 的事業並苦苦的掙扎. 但請容許我拒絕! 😱 ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:1:0","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"💣 投資與信任 曾經有名企業家說過, 選擇投資人比投資公司來的有用 – by an Entrepreneur 我對這句話深信不疑. 這是另一個哲學命題, 如果你不信任我並沒有關係! 請相信我的人! ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:2:0","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Others"],"content":"❤️ 其他 如果有其他問題, 可以直接問我! 可以合作的人很多, 我並不是唯一一個. 但我也是唯一一個我! 😋 ","date":"2017-09-27","objectID":"/blog/zh-tw/what-i-am-about-to-do/:3:0","tags":["Others"],"title":"我想幹嘛","uri":"/blog/zh-tw/what-i-am-about-to-do/"},{"categories":["Productivity"],"content":"WIP ","date":"2017-09-27","objectID":"/blog/zh-tw/productivity/:0:0","tags":["Productivity"],"title":"生產力","uri":"/blog/zh-tw/productivity/"},{"categories":["Announcement"],"content":"我一向不是很喜歡寫作以及談論自己的事情. 所以我一直很排斥去寫關於自己的事情， 更何況我誰也不是，既不是名人, 也從沒上過什麼報章雜誌. 這種情況我實在很難想 像誰會特地來看這「關於我」的文章. 至此, 我不打算寫一個太過沉長的自我介紹. 我現齡24歲, 活得不長也不短，但也足夠讓一個人回顧自己過往的經歷. 故事一開始總是悲慘的, 從小我就是個極度悲觀的人, 既容易放棄, 也不懂的堅持. 不知道失敗跟成功的區別, 從小可能有一定的天資, 以為即使不努力也能拿到好的成績。 等再大一點的時候，不知不覺成績已經是倒數了. 在自己的兄弟姊妹面前總是抬不起頭， 裝得一副無所謂的樣子。直到國中，我的人生才有了劇烈的轉變. 上了國中, 我的成績 平平, 在我爸媽的鼓勵下我決定轉往我比較有興趣的發展, 就是體育方面. 國中第一年 我參加了我們國中的網球班，在教練極端嚴厲的指導下, 再加上我天生的身體不算太好, 我依然克服了種種的考驗. 在第一次充分有了自己的專長後, 讓我了解到了「忍耐」、 「不看重」和「自信」. 最後一年, 我回到了普通的班級, 決定挑戰自己一直逃避的事情, 讀書. 當初真的很不容 易, 挑戰自己沒有興趣的東西真的很困難. 直到我在某種機緣之下了解到「人生不是都是 快樂的」和「某種意義上來說, 沒有人是愛讀書的」. 我才正式的開始了自己的挑戰, 挑戰自己不擅長的事物. 很神奇的是, 我的成績也真的爬上來了. 雖然依然不是前幾名, 但卻讓我體悟的人生最重要的事情. 「努力不會背棄你」和「領悟到成功的美好之後, 會讓自己覺得無所不能」, 這時候是我人生的最高潮. 第三件事情, 則是我人生的最低潮. 我住的是寄宿學校, 並不像國中一樣那麼自由. 我遭受了我人生第一次的霸凌. 有可能是過於自信, 也可能是過於追求完美。 盡是一些讓自己感到人生絕望的事情, 感受到了人生的不完美.更讓我學習到了 「謙虛」和「不要太計較」. 到了大學, 我開始小心的與人接觸. 去學習怎麼與人溝通, 怎麼做人更圓融. 對自己 不需過分要求, 只需要取得心中的平衡便可. 使我更加的成熟面對事情, 大學畢業了, 而我的冒險也將繼續. 我的人生一直不是很順利, 經歷過人生高潮與低潮, 在這樣的人生波折中奮鬥. 我並不是個極其聰明的人, 我只是個知道失敗並從中爬起來的人, 知道從失敗到 成功的滋味. 努力不一定會得到想要的, 但是唯有努力才能改變自己, 掌握自己的人生. ","date":"2017-09-02","objectID":"/blog/zh-tw/about-me/:0:0","tags":["Announcement"],"title":"關於我","uri":"/blog/zh-tw/about-me/"},{"categories":["Announcement"],"content":"這是我個人的部落格, 我聽說了很多人寫部落格有許多好處. 所以我決定開始 寫這個部落格. 這裡我打算分享我在開發時遇到的事情,以及我認為成程序員 應該要是怎麼樣子,它們的工作有哪些, 而他們實際上又在做什麼呢? ","date":"2017-09-01","objectID":"/blog/zh-tw/start-blog-announcment/:0:0","tags":["Announcement"],"title":"開始部落格!","uri":"/blog/zh-tw/start-blog-announcment/"},{"categories":null,"content":"關於, 我!","date":"2019-08-02","objectID":"/blog/zh-tw/about/","tags":null,"title":"關於, 我!","uri":"/blog/zh-tw/about/"},{"categories":null,"content":"歡迎來到 Jen-Chieh Shen 的部落格! 歡迎來到我的部落格, 我並沒有在哪個地方特別突出, 也不是個相信天資論的人. 唯有努力才能造就一切. 我也不 相信神，如果真的有神, 那他已經把我的生活弄的足夠糟了. 我並不是個很勤勞的人, 喜歡獨處, 以及思考一切讓 我覺得好奇的事物. 喜歡觀察人, 情感, 以及揣測未來. 如果對我這樣的人有興趣, 可以看「關於我」這篇. 在2013年喜歡上了計算機領域, 對這領域有特別的美學及見解. 這個部落格也是我從無到有自己建出來的. 有了一 些在這領域的經驗後, 打算在這裡寫下一些自己的開發經歷以及感想. 在其他領域也有極大的興趣, 不過只能算是業餘的研究者. 喜歡物理, 把生活周遭的一切合理. 喜歡數學, 把一切合 理化的東西寫成一個簡單的符號/公式. 喜歡哲學, 讓人類思考的源學. 其中最喜歡的名言「知識就是力量」. ","date":"2019-08-02","objectID":"/blog/zh-tw/about/:0:0","tags":null,"title":"關於, 我!","uri":"/blog/zh-tw/about/"}]